{"/home/travis/build/npmtest/node-npmtest-depcheck/test.js":"/* istanbul instrument in package npmtest_depcheck */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-depcheck/lib.npmtest_depcheck.js":"/* istanbul instrument in package npmtest_depcheck */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_depcheck = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_depcheck = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-depcheck/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-depcheck && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_depcheck */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_depcheck\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_depcheck.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_depcheck.rollup.js'] =\n            local.assetsDict['/assets.npmtest_depcheck.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_depcheck.__dirname + '/lib.npmtest_depcheck.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = depcheck;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _minimatch = require('minimatch');\n\nvar _minimatch2 = _interopRequireDefault(_minimatch);\n\nvar _check = require('./check');\n\nvar _check2 = _interopRequireDefault(_check);\n\nvar _utils = require('./utils');\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isIgnored(ignoreMatches, dependency) {\n  var match = _lodash2.default.partial(_minimatch2.default, dependency);\n  return ignoreMatches.some(match);\n}\n\nfunction hasBin(rootDir, dependency) {\n  try {\n    var metadata = (0, _utils.readJSON)(_path2.default.join(rootDir, 'node_modules', dependency, 'package.json'));\n    return {}.hasOwnProperty.call(metadata, 'bin');\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction filterDependencies(rootDir, ignoreBinPackage, ignoreMatches, dependencies) {\n  return (0, _lodash2.default)(dependencies).keys().reject(function (dep) {\n    return isIgnored(ignoreMatches, dep) || ignoreBinPackage && hasBin(rootDir, dep);\n  }).value();\n}\n\nfunction depcheck(rootDir, options, callback) {\n  var getOption = function getOption(key) {\n    return _lodash2.default.isUndefined(options[key]) ? _constants.defaultOptions[key] : options[key];\n  };\n\n  var withoutDev = getOption('withoutDev');\n  var ignoreBinPackage = getOption('ignoreBinPackage');\n  var ignoreMatches = getOption('ignoreMatches');\n  var ignoreDirs = _lodash2.default.union(_constants.defaultOptions.ignoreDirs, options.ignoreDirs);\n\n  var detectors = getOption('detectors');\n  var parsers = (0, _lodash2.default)(getOption('parsers')).mapValues(function (value) {\n    return _lodash2.default.isArray(value) ? value : [value];\n  }).merge({ '*': getOption('specials') }).value();\n\n  var metadata = options.package || (0, _utils.readJSON)(_path2.default.join(rootDir, 'package.json'));\n  var dependencies = metadata.dependencies || {};\n  var devDependencies = !withoutDev && metadata.devDependencies ? metadata.devDependencies : {};\n  var peerDeps = Object.keys(metadata.peerDependencies || {});\n  var optionalDeps = Object.keys(metadata.optionalDependencies || {});\n  var deps = filterDependencies(rootDir, ignoreBinPackage, ignoreMatches, dependencies);\n  var devDeps = filterDependencies(rootDir, ignoreBinPackage, ignoreMatches, devDependencies);\n\n  return (0, _check2.default)({\n    rootDir: rootDir,\n    ignoreDirs: ignoreDirs,\n    deps: deps,\n    devDeps: devDeps,\n    peerDeps: peerDeps,\n    optionalDeps: optionalDeps,\n    parsers: parsers,\n    detectors: detectors\n  }).then(function (results) {\n    return _extends(results, {\n      missing: _lodash2.default.pick(results.missing, filterDependencies(rootDir, ignoreBinPackage, ignoreMatches, results.missing))\n    });\n  }).then(callback);\n}\n\ndepcheck.parser = _constants.availableParsers;\ndepcheck.detector = _constants.availableDetectors;\ndepcheck.special = _constants.availableSpecials;\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/check.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = check;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _walkdir = require('walkdir');\n\nvar _walkdir2 = _interopRequireDefault(_walkdir);\n\nvar _minimatch = require('minimatch');\n\nvar _minimatch2 = _interopRequireDefault(_minimatch);\n\nvar _builtinModules = require('builtin-modules');\n\nvar _builtinModules2 = _interopRequireDefault(_builtinModules);\n\nvar _requirePackageName = require('require-package-name');\n\nvar _requirePackageName2 = _interopRequireDefault(_requirePackageName);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction isModule(dir) {\n  try {\n    (0, _utils.readJSON)(_path2.default.resolve(dir, 'package.json'));\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction mergeBuckets(object1, object2) {\n  return _lodash2.default.mergeWith(object1, object2, function (value1, value2) {\n    var array1 = value1 || [];\n    var array2 = value2 || [];\n    return array1.concat(array2);\n  });\n}\n\nfunction detect(detectors, node) {\n  return (0, _lodash2.default)(detectors).map(function (detector) {\n    try {\n      return detector(node);\n    } catch (error) {\n      return [];\n    }\n  }).flatten().value();\n}\n\n// fix for node.js <= 3, it throws TypeError when value type invalid in weak set\nfunction hasVisited(ast, visited) {\n  try {\n    return visited.has(ast);\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction recursive(ast, visited) {\n  if (!ast || hasVisited(ast, visited)) {\n    return [];\n  } else if (_lodash2.default.isArray(ast)) {\n    return (0, _lodash2.default)(ast).map(function (node) {\n      return recursive(node, visited);\n    }).flatten().value();\n  } else if (ast.type) {\n    visited.add(ast);\n    return (0, _lodash2.default)(ast).keys().filter(function (key) {\n      return key !== 'tokens' && key !== 'comments';\n    }).map(function (key) {\n      return recursive(ast[key], visited);\n    }).flatten().concat(ast).value();\n  }\n\n  return [];\n}\n\nfunction getNodes(ast) {\n  var visited = new WeakSet();\n  var nodes = recursive(ast, visited);\n  return nodes;\n}\n\nfunction discoverPropertyDep(rootDir, deps, property, depName) {\n  try {\n    var file = _path2.default.resolve(rootDir, 'node_modules', depName, 'package.json');\n    var metadata = (0, _utils.readJSON)(file);\n    var propertyDeps = Object.keys(metadata[property] || {});\n    return _lodash2.default.intersection(deps, propertyDeps);\n  } catch (error) {\n    return [];\n  }\n}\n\nfunction getDependencies(dir, filename, deps, parser, detectors) {\n  return new Promise(function (resolve, reject) {\n    _fs2.default.readFile(filename, 'utf8', function (error, content) {\n      if (error) {\n        reject(error);\n      }\n\n      try {\n        resolve(parser(content, filename, deps, dir));\n      } catch (syntaxError) {\n        reject(syntaxError);\n      }\n    });\n  }).then(function (ast) {\n    // when parser returns string array, skip detector step and treat them as dependencies.\n    var dependencies = _lodash2.default.isArray(ast) && ast.every(_lodash2.default.isString) ? ast : (0, _lodash2.default)(getNodes(ast)).map(function (node) {\n      return detect(detectors, node);\n    }).flatten().uniq().map(_requirePackageName2.default).value();\n\n    var discover = _lodash2.default.partial(discoverPropertyDep, dir, deps);\n    var discoverPeerDeps = _lodash2.default.partial(discover, 'peerDependencies');\n    var discoverOptionalDeps = _lodash2.default.partial(discover, 'optionalDependencies');\n    var peerDeps = (0, _lodash2.default)(dependencies).map(discoverPeerDeps).flatten().value();\n    var optionalDeps = (0, _lodash2.default)(dependencies).map(discoverOptionalDeps).flatten().value();\n\n    return dependencies.concat(peerDeps).concat(optionalDeps);\n  });\n}\n\nfunction checkFile(dir, filename, deps, parsers, detectors) {\n  var basename = _path2.default.basename(filename);\n  var targets = (0, _lodash2.default)(parsers).keys().filter(function (glob) {\n    return (0, _minimatch2.default)(basename, glob, { dot: true });\n  }).map(function (key) {\n    return parsers[key];\n  }).flatten().value();\n\n  return targets.map(function (parser) {\n    return getDependencies(dir, filename, deps, parser, detectors).then(function (using) {\n      return {\n        using: _defineProperty({}, filename, (0, _lodash2.default)(using).filter(function (dep) {\n          return dep && dep !== '.' && dep !== '..';\n        }) // TODO why need check?\n        .filter(function (dep) {\n          return !_lodash2.default.includes(_builtinModules2.default, dep);\n        }).uniq().value())\n      };\n    }, function (error) {\n      return {\n        invalidFiles: _defineProperty({}, filename, error)\n      };\n    });\n  });\n}\n\nfunction checkDirectory(dir, rootDir, ignoreDirs, deps, parsers, detectors) {\n  return new Promise(function (resolve) {\n    var promises = [];\n    var finder = (0, _walkdir2.default)(dir, { no_recurse: true });\n\n    finder.on('directory', function (subdir) {\n      return ignoreDirs.indexOf(_path2.default.basename(subdir)) === -1 && !isModule(subdir) ? promises.push(checkDirectory(subdir, rootDir, ignoreDirs, deps, parsers, detectors)) : null;\n    });\n\n    finder.on('file', function (filename) {\n      return promises.push.apply(promises, _toConsumableArray(checkFile(rootDir, filename, deps, parsers, detectors)));\n    });\n\n    finder.on('error', function (dirPath, error) {\n      return promises.push(Promise.resolve({\n        invalidDirs: _defineProperty({}, dirPath, error)\n      }));\n    });\n\n    finder.on('end', function () {\n      return resolve(Promise.all(promises).then(function (results) {\n        return results.reduce(function (obj, current) {\n          return {\n            using: mergeBuckets(obj.using, current.using || {}),\n            invalidFiles: _extends(obj.invalidFiles, current.invalidFiles),\n            invalidDirs: _extends(obj.invalidDirs, current.invalidDirs)\n          };\n        }, {\n          using: {},\n          invalidFiles: {},\n          invalidDirs: {}\n        });\n      }));\n    });\n  });\n}\n\nfunction buildResult(result, deps, devDeps, peerDeps, optionalDeps) {\n  var usingDepsLookup = (0, _lodash2.default)(result.using)\n  // { f1:[d1,d2,d3], f2:[d2,d3,d4] }\n  .toPairs()\n  // [ [f1,[d1,d2,d3]], [f2,[d2,d3,d4]] ]\n  .map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        file = _ref2[0],\n        dep = _ref2[1];\n\n    return [dep, _lodash2.default.times(dep.length, function () {\n      return file;\n    })];\n  })\n  // [ [ [d1,d2,d3],[f1,f1,f1] ], [ [d2,d3,d4],[f2,f2,f2] ] ]\n  .map(function (pairs) {\n    return _lodash2.default.zip.apply(_lodash2.default, _toConsumableArray(pairs));\n  })\n  // [ [ [d1,f1],[d2,f1],[d3,f1] ], [ [d2,f2],[d3,f2],[d4,f2]] ]\n  .flatten()\n  // [ [d1,f1], [d2,f1], [d3,f1], [d2,f2], [d3,f2], [d4,f2] ]\n  .groupBy(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 1),\n        dep = _ref4[0];\n\n    return dep;\n  })\n  // { d1:[ [d1,f1] ], d2:[ [d2,f1],[d2,f2] ], d3:[ [d3,f1],[d3,f2] ], d4:[ [d4,f2] ] }\n  .mapValues(function (pairs) {\n    return pairs.map(_lodash2.default.last);\n  })\n  // { d1:[ f1 ], d2:[ f1,f2 ], d3:[ f1,f2 ], d4:[ f2 ] }\n  .value();\n\n  var usingDeps = Object.keys(usingDepsLookup);\n  var allDeps = deps.concat(devDeps).concat(peerDeps).concat(optionalDeps);\n  var missingDeps = _lodash2.default.difference(usingDeps, allDeps);\n\n  var missingDepsLookup = (0, _lodash2.default)(missingDeps).map(function (missingDep) {\n    return [missingDep, usingDepsLookup[missingDep]];\n  }).fromPairs().value();\n\n  return {\n    dependencies: _lodash2.default.difference(deps, usingDeps),\n    devDependencies: _lodash2.default.difference(devDeps, usingDeps),\n    missing: missingDepsLookup,\n    using: usingDepsLookup,\n    invalidFiles: result.invalidFiles,\n    invalidDirs: result.invalidDirs\n  };\n}\n\nfunction check(_ref5) {\n  var rootDir = _ref5.rootDir,\n      ignoreDirs = _ref5.ignoreDirs,\n      deps = _ref5.deps,\n      devDeps = _ref5.devDeps,\n      peerDeps = _ref5.peerDeps,\n      optionalDeps = _ref5.optionalDeps,\n      parsers = _ref5.parsers,\n      detectors = _ref5.detectors;\n\n  var allDeps = _lodash2.default.union(deps, devDeps);\n  return checkDirectory(rootDir, rootDir, ignoreDirs, allDeps, parsers, detectors).then(function (result) {\n    return buildResult(result, deps, devDeps, peerDeps, optionalDeps);\n  });\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/utils/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScripts = undefined;\n\nvar _getScripts = require('./get-scripts');\n\nObject.defineProperty(exports, 'getScripts', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getScripts).default;\n  }\n});\nexports.readJSON = readJSON;\nexports.evaluate = evaluate;\nexports.tryRequire = tryRequire;\n\nvar _vm = require('vm');\n\nvar _vm2 = _interopRequireDefault(_vm);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction readJSON(filePath) {\n  return require(filePath); // eslint-disable-line global-require\n}\n\nfunction evaluate(code) {\n  var exports = {};\n  var sandbox = {\n    exports: exports,\n    module: { exports: exports }\n  };\n\n  _vm2.default.runInNewContext(code, sandbox);\n\n  return sandbox.module.exports;\n}\n\nfunction tryRequire(module) {\n  try {\n    return require(module); // eslint-disable-line global-require\n  } catch (e) {\n    return null;\n  }\n}","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/utils/get-scripts.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = getScripts;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _jsYaml = require('js-yaml');\n\nvar _jsYaml2 = _interopRequireDefault(_jsYaml);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar scriptCache = {};\n\nfunction getCacheOrFile(key, fn) {\n  if (scriptCache[key]) {\n    return scriptCache[key];\n  }\n\n  var value = fn();\n  scriptCache[key] = value;\n\n  return value;\n}\n\nvar travisCommands = [\n// Reference: http://docs.travis-ci.com/user/customizing-the-build/#The-Build-Lifecycle\n'before_install', 'install', 'before_script', 'script', 'after_success or after_failure', 'before_deploy', 'after_deploy', 'after_script'];\n\nfunction getScripts(filepath) {\n  var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  return getCacheOrFile(filepath, function () {\n    var basename = _path2.default.basename(filepath);\n    var fileContent = content !== null ? content : _fs2.default.readFileSync(filepath, 'utf-8');\n\n    if (basename === 'package.json') {\n      return _lodash2.default.values(JSON.parse(fileContent).scripts || {});\n    } else if (basename === '.travis.yml') {\n      var _ret = function () {\n        var metadata = _jsYaml2.default.safeLoad(content) || {};\n        return {\n          v: (0, _lodash2.default)(travisCommands).map(function (cmd) {\n            return metadata[cmd] || [];\n          }).flatten().value()\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return [];\n  });\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/constants.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultOptions = exports.availableSpecials = exports.availableDetectors = exports.availableParsers = undefined;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _component = require('./component.json');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction constructComponent(source, name) {\n  return (0, _lodash2.default)(source[name]).map(function (file) {\n    return [file, require(_path2.default.resolve(__dirname, name, file))];\n  }).fromPairs().value();\n}\n\nvar availableParsers = exports.availableParsers = constructComponent(_component2.default, 'parser');\n\nvar availableDetectors = exports.availableDetectors = constructComponent(_component2.default, 'detector');\n\nvar availableSpecials = exports.availableSpecials = constructComponent(_component2.default, 'special');\n\nvar defaultOptions = exports.defaultOptions = {\n  withoutDev: false,\n  ignoreBinPackage: false,\n  ignoreMatches: [],\n  ignoreDirs: ['.git', '.svn', '.hg', '.idea', 'node_modules', 'bower_components'],\n  parsers: {\n    '*.js': availableParsers.jsx,\n    '*.jsx': availableParsers.jsx,\n    '*.coffee': availableParsers.coffee,\n    '*.litcoffee': availableParsers.coffee,\n    '*.coffee.md': availableParsers.coffee,\n    '*.ts': availableParsers.typescript,\n    '*.tsx': availableParsers.typescript,\n    '*.sass': availableParsers.sass,\n    '*.scss': availableParsers.sass\n  },\n  detectors: [availableDetectors.importDeclaration, availableDetectors.requireCallExpression, availableDetectors.gruntLoadTaskCallExpression],\n  specials: _lodash2.default.values(availableSpecials)\n};","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/parser/coffee.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseCoffeeScript;\n\nvar _depsRegex = require('deps-regex');\n\nvar _depsRegex2 = _interopRequireDefault(_depsRegex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar re = new _depsRegex2.default({ matchES6: false });\n\nfunction parseCoffeeScript(content) {\n  return re.getDependencies(content);\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/parser/es6.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseES6;\n\nvar _babylon = require('babylon');\n\nfunction parseES6(content) {\n  return (0, _babylon.parse)(content, {\n    sourceType: 'module'\n  });\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/parser/es7.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseES7;\n\nvar _babylon = require('babylon');\n\nfunction parseES7(content) {\n  return (0, _babylon.parse)(content, {\n    sourceType: 'module',\n\n    // Enable all possible babylon plugins.\n    // Because we only parse them, not evaluate any code, it is safe to do so.\n    plugins: ['*']\n  });\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/parser/jsx.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseJSX;\n\nvar _babylon = require('babylon');\n\nfunction parseJSX(content) {\n  return (0, _babylon.parse)(content, {\n    sourceType: 'module',\n\n    // Enable all possible babylon plugins.\n    // Because the guys using React always want the newest syntax.\n    plugins: ['*', 'jsx']\n  });\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/parser/sass.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseSASS;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _requirePackageName = require('require-package-name');\n\nvar _requirePackageName2 = _interopRequireDefault(_requirePackageName);\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sass = (0, _utils.tryRequire)('node-sass');\n\nfunction parseSASS(content, filePath, deps, rootDir) {\n  var _sass$renderSync = sass.renderSync({\n    data: content,\n    includePaths: [_path2.default.dirname(filePath)]\n  }),\n      stats = _sass$renderSync.stats;\n\n  var result = (0, _lodash2.default)(stats.includedFiles).map(function (file) {\n    return _path2.default.relative(rootDir, file);\n  }).filter(function (file) {\n    return file.indexOf('node_modules') === 0;\n  }) // refer to node_modules\n  .map(function (file) {\n    return file.replace(/\\\\/g, '/');\n  }) // normalize paths in Windows\n  .map(function (file) {\n    return file.substring('node_modules/'.length);\n  }) // avoid heading slash\n  .map(_requirePackageName2.default).uniq().value();\n\n  return result;\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/parser/typescript.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseTypescript;\n\nvar _babylon = require('babylon');\n\nvar _utils = require('../utils');\n\nvar typescript = (0, _utils.tryRequire)('typescript');\n\nfunction parseTypescript(content, filePath) {\n  if (!typescript) {\n    return [];\n  }\n\n  var compileOptions = {\n    module: typescript.ModuleKind.CommonJS,\n    target: typescript.ScriptTarget.Latest\n  };\n\n  var result = typescript.transpile(content, compileOptions, filePath);\n\n  // TODO avoid parse source file twice, use Typescript native traverser to find out dependencies.\n  // Reference: https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#traversing-the-ast-with-a-little-linter\n  return (0, _babylon.parse)(result, {\n    sourceType: 'module'\n  });\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/detector/gruntLoadTaskCallExpression.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = detectGruntLoadTaskCallExpression;\nfunction detectGruntLoadTaskCallExpression(node) {\n  return node.type === 'CallExpression' && node.callee && node.callee.property && node.callee.property.name === 'loadNpmTasks' && node.arguments[0] ? [node.arguments[0].value] : [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/detector/importDeclaration.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = detectImportDeclaration;\nfunction detectImportDeclaration(node) {\n  return node.type === 'ImportDeclaration' && node.source && node.source.value ? [node.source.value] : [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/detector/requireCallExpression.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = detectRequireCallExpression;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction detectRequireCallExpression(node) {\n  return node.type === 'CallExpression' && node.callee && node.callee.type === 'Identifier' && node.callee.name === 'require' && node.arguments[0] && _lodash2.default.isString(node.arguments[0].value) ? [node.arguments[0].value] : [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/babel.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = parseBabel;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(content) {\n  try {\n    return JSON.parse(content);\n  } catch (error) {\n    return {}; // ignore parse error silently\n  }\n}\n\nfunction isPlugin(target, plugin) {\n  return _lodash2.default.isString(target) ? target === plugin || target === 'babel-plugin-' + plugin : target[0] === plugin || target[0] === 'babel-plugin-' + plugin;\n}\n\nfunction contain(array, dep, prefix) {\n  if (!array) {\n    return false;\n  }\n\n  // extract name if wrapping with options\n  var names = array.map(function (item) {\n    return _lodash2.default.isString(item) ? item : item[0];\n  });\n  if (names.indexOf(dep) !== -1) {\n    return true;\n  }\n\n  if (prefix && dep.indexOf(prefix) === 0) {\n    return contain(array, dep.substring(prefix.length), false);\n  }\n\n  return false;\n}\n\nfunction getReactTransforms(deps, plugins) {\n  var transforms = (0, _lodash2.default)(plugins || []).filter(function (plugin) {\n    return isPlugin(plugin, 'react-transform');\n  }).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        plugin = _ref2[1];\n\n    return plugin.transforms.map(function (_ref3) {\n      var transform = _ref3.transform;\n      return transform;\n    });\n  }).first();\n\n  return _lodash2.default.intersection(transforms, deps);\n}\n\nfunction filter(deps, options) {\n  var presets = deps.filter(function (dep) {\n    return contain(options.presets, dep, 'babel-preset-');\n  });\n\n  var plugins = deps.filter(function (dep) {\n    return contain(options.plugins, dep, 'babel-plugin-');\n  });\n\n  var reactTransforms = getReactTransforms(deps, options.plugins);\n\n  return presets.concat(plugins, reactTransforms);\n}\n\nfunction checkOptions(deps) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var optDeps = filter(deps, options);\n  var envDeps = (0, _lodash2.default)(options.env).values().map(function (env) {\n    return filter(deps, env);\n  }).flatten().value();\n\n  return optDeps.concat(envDeps);\n}\n\nfunction parseBabel(content, filePath, deps) {\n  var filename = _path2.default.basename(filePath);\n\n  if (filename === '.babelrc') {\n    var options = parse(content);\n    return checkOptions(deps, options);\n  }\n\n  if (filename === 'package.json') {\n    var metadata = parse(content);\n    return checkOptions(deps, metadata.babel);\n  }\n\n  return [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/bin.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = parseBinary;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar metadataCache = {};\n\nfunction getCacheOrRequire(packagePath) {\n  if (metadataCache[packagePath]) {\n    return metadataCache[packagePath];\n  }\n\n  var metadata = (0, _utils.readJSON)(packagePath);\n  metadataCache[packagePath] = metadata;\n  return metadata;\n}\n\nfunction loadMetadata(dep, dir) {\n  try {\n    var packagePath = _path2.default.resolve(dir, 'node_modules', dep, 'package.json');\n    return getCacheOrRequire(packagePath);\n  } catch (error) {\n    return {}; // ignore silently\n  }\n}\n\nfunction getBinaryFeatures(dep, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n\n  var binPath = _path2.default.join('node_modules', dep, value).replace(/\\\\/g, '/');\n\n  var features = [key, '$(npm bin)/' + key, 'node_modules/.bin/' + key, './node_modules/.bin/' + key, binPath, './' + binPath];\n\n  return features;\n}\n\nfunction isBinaryInUse(dep, scripts, dir) {\n  var metadata = loadMetadata(dep, dir);\n  var binaries = _lodash2.default.toPairs(metadata.bin || {});\n  return binaries.some(function (bin) {\n    return getBinaryFeatures(dep, bin).some(function (feature) {\n      return scripts.some(function (script) {\n        return _lodash2.default.includes(' ' + script + ' ', ' ' + feature + ' ');\n      });\n    });\n  });\n}\n\nfunction parseBinary(content, filepath, deps, dir) {\n  var scripts = (0, _utils.getScripts)(filepath, content);\n  return deps.filter(function (dep) {\n    return isBinaryInUse(dep, scripts, dir);\n  });\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/commitizen.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseCommitizen;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _requirePackageName = require('require-package-name');\n\nvar _requirePackageName2 = _interopRequireDefault(_requirePackageName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseCommitizen(content, filePath, deps, rootDir) {\n  var packageJsonPath = _path2.default.resolve(rootDir, 'package.json');\n  var resolvedFilePath = _path2.default.resolve(filePath);\n\n  if (resolvedFilePath === packageJsonPath) {\n    var metadata = JSON.parse(content);\n\n    if (metadata.config && metadata.config.commitizen && metadata.config.commitizen.path) {\n      var commitizenPath = metadata.config.commitizen.path;\n\n      if (!commitizenPath.startsWith('.')) {\n        return [(0, _requirePackageName2.default)(commitizenPath)];\n      }\n\n      var normalizedPath = _path2.default.normalize(commitizenPath).replace(/\\\\/g, '/');\n\n      if (!normalizedPath.startsWith('node_modules')) {\n        // The path is not refering to a file in another module\n        return [];\n      }\n\n      var packagePath = normalizedPath.substring('node_modules/'.length);\n\n      return [(0, _requirePackageName2.default)(packagePath)];\n    }\n  }\n\n  return [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/eslint.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseESLint;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _jsYaml = require('js-yaml');\n\nvar _jsYaml2 = _interopRequireDefault(_jsYaml);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _requirePackageName = require('require-package-name');\n\nvar _requirePackageName2 = _interopRequireDefault(_requirePackageName);\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(content) {\n  try {\n    return JSON.parse(content);\n  } catch (error) {\n    // not JSON format\n  }\n\n  try {\n    return _jsYaml2.default.safeLoad(content);\n  } catch (error) {\n    // not YAML format\n  }\n\n  try {\n    return (0, _utils.evaluate)('module.exports = ' + content);\n  } catch (error) {}\n  // not valid JavaScript code\n\n\n  // parse fail, return nothing\n  return {};\n}\n\nfunction wrapToArray(obj) {\n  if (!obj) {\n    return [];\n  } else if (_lodash2.default.isArray(obj)) {\n    return obj;\n  }\n\n  return [obj];\n}\n\nfunction isEslintConfigAnAbsolutePath(specifier) {\n  return _path2.default.isAbsolute(specifier);\n}\n\nfunction isEslintConfigARelativePath(specifier) {\n  return _lodash2.default.startsWith(specifier, './') || _lodash2.default.startsWith(specifier, '../');\n}\n\nfunction isEslintConfigAScopedModule(specifier) {\n  return _lodash2.default.startsWith(specifier, '@');\n}\n\nfunction isEslintConfigAFullyQualifiedModuleName(specifier) {\n  return _lodash2.default.startsWith(specifier, 'eslint-config-');\n}\n\nfunction resolvePresetPackage(preset, rootDir) {\n  // inspired from https://github.com/eslint/eslint/blob/5b4a94e26d0ef247fe222dacab5749805d9780dd/lib/config/config-file.js#L347\n  if (isEslintConfigAnAbsolutePath(preset)) {\n    return preset;\n  }\n  if (isEslintConfigARelativePath(preset)) {\n    return _path2.default.resolve(rootDir, preset);\n  }\n  if (isEslintConfigAScopedModule(preset)) {\n    var scope = preset.substring(0, preset.indexOf('/'));\n    var module = preset.substring(preset.indexOf('/') + 1);\n\n    if (isEslintConfigAFullyQualifiedModuleName(module)) {\n      return preset;\n    }\n    return scope + '/eslint-config-' + module;\n  }\n  if (isEslintConfigAFullyQualifiedModuleName(preset)) {\n    return preset;\n  }\n  return 'eslint-config-' + preset;\n}\n\nfunction loadConfig(preset, rootDir) {\n  var presetPath = _path2.default.isAbsolute(preset) ? preset : _path2.default.resolve(rootDir, 'node_modules', preset);\n\n  try {\n    return require(presetPath); // eslint-disable-line global-require\n  } catch (error) {\n    return {}; // silently return nothing\n  }\n}\n\nfunction checkConfig(config, rootDir) {\n  var parser = wrapToArray(config.parser);\n  var plugins = wrapToArray(config.plugins).map(function (plugin) {\n    return 'eslint-plugin-' + plugin;\n  });\n\n  var presets = wrapToArray(config.extends).filter(function (preset) {\n    return preset !== 'eslint:recommended';\n  }).map(function (preset) {\n    return resolvePresetPackage(preset, rootDir);\n  });\n\n  var presetPackages = presets.filter(function (preset) {\n    return !_path2.default.isAbsolute(preset);\n  }).map(_requirePackageName2.default);\n\n  var presetDeps = (0, _lodash2.default)(presets).map(function (preset) {\n    return loadConfig(preset, rootDir);\n  }).map(function (presetConfig) {\n    return checkConfig(presetConfig, rootDir);\n  }).flatten().value();\n\n  return _lodash2.default.union(parser, plugins, presetPackages, presetDeps);\n}\n\nfunction parseESLint(content, filename, deps, rootDir) {\n  var basename = _path2.default.basename(filename);\n  if (/^\\.eslintrc(\\.json|\\.js|\\.yml|\\.yaml)?$/.test(basename)) {\n    var config = parse(content);\n    return checkConfig(config, rootDir);\n  }\n\n  return [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/feross-standard.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseFerossStandard;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseFerossStandard(content, filePath, deps, rootDir) {\n  var packageJsonPath = _path2.default.resolve(rootDir, 'package.json');\n  var resolvedFilePath = _path2.default.resolve(filePath);\n  if (resolvedFilePath === packageJsonPath && deps.indexOf('standard') !== -1) {\n    var metadata = JSON.parse(content);\n    var config = metadata.standard || {};\n    var parser = config.parser;\n    return parser ? [parser] : [];\n  }\n\n  return [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/gulp-load-plugins.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseGulpPlugins;\n\nvar _path = require('path');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _minimatch = require('minimatch');\n\nvar _minimatch2 = _interopRequireDefault(_minimatch);\n\nvar _babelTraverse = require('babel-traverse');\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _es = require('../parser/es7');\n\nvar _es2 = _interopRequireDefault(_es);\n\nvar _importDeclaration = require('../detector/importDeclaration');\n\nvar _importDeclaration2 = _interopRequireDefault(_importDeclaration);\n\nvar _requireCallExpression = require('../detector/requireCallExpression');\n\nvar _requireCallExpression2 = _interopRequireDefault(_requireCallExpression);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction getPluginLookup(deps) {\n  var patterns = ['gulp-*', 'gulp.*', '@*/gulp{-,.}*'];\n  var lookup = (0, _lodash2.default)(deps).filter(function (dep) {\n    return patterns.some(function (pattern) {\n      return (0, _minimatch2.default)(dep, pattern);\n    });\n  }).map(function (dep) {\n    var isScoped = dep[0] === '@';\n    var scopedParts = dep.substring(1).split('/');\n    var scope = isScoped ? scopedParts[0] : '';\n    var plugin = isScoped ? scopedParts[1] : dep;\n    var variableName = _lodash2.default.camelCase(plugin.substring('gulp-'.length));\n    var memberName = isScoped ? '.' + scope + '.' + variableName : '.' + variableName;\n    return [memberName, dep];\n  }).fromPairs().value();\n\n  return lookup;\n}\n\n/**\n * Get the references to the variable in the path scope.\n * @example Within the path scope, returns references to `loadPlugins` variable.\n */\nfunction getReferences(path, variableName) {\n  var bindings = path.scope.getBinding(variableName);\n  var references = bindings.referencePaths;\n  return references;\n}\n\n/**\n * Get the variable name from the variable assigned declaration.\n * @example With code `$ = loadPlugins()` and `loadPlugins` as path, returns the string `$`.\n */\nfunction getIdentifierVariableName(path) {\n  if (path.isIdentifier() && path.parentPath.isCallExpression() && path.parentPath.parentPath.isVariableDeclarator()) {\n    var variableName = path.parentPath.parentPath.node.id.name;\n    return variableName;\n  }\n\n  return '';\n}\n\n/**\n * Get the identifier references from imported/required load-plugin variable name.\n * @example With code `a = plugins(), b = plugins()`, returns uasge references to `a` and `b`.\n */\nfunction getIdentifierReferences(path, loadPluginsVariableName) {\n  var requireReferences = getReferences(path, loadPluginsVariableName);\n\n  var identifierReferences = (0, _lodash2.default)(requireReferences).map(getIdentifierVariableName).filter().map(function (identifierVariableName) {\n    return getReferences(path, identifierVariableName);\n  }).flatten().value();\n\n  return identifierReferences;\n}\n\n/**\n * Get the package name from the identifier call path.\n * @example With code `$.jshint()` and `$` as path, returns `gulp-jshint` string.\n */\nfunction getPackageName(content, pluginLookup, identifierPath) {\n  var memberPath = identifierPath.parentPath;\n  while (memberPath.isMemberExpression()) {\n    var code = content.slice(identifierPath.node.end, memberPath.node.end);\n    var pluginName = pluginLookup[code];\n    if (pluginName) {\n      return pluginName;\n    }\n\n    memberPath = memberPath.parentPath;\n  }\n\n  return '';\n}\n\n/**\n * Get the gulp packages found from the path. This is the entry for traverse.\n */\nfunction check(content, deps, path) {\n  if (\n  // Pattern: import plugins from 'gulp-load-plugins', $ = plugins(), $.jshint()\n  (0, _importDeclaration2.default)(path.node)[0] === 'gulp-load-plugins' && path.isImportDeclaration() && path.get('specifiers')[0] && path.get('specifiers')[0].isImportDefaultSpecifier() && path.get('specifiers')[0].get('local').isIdentifier()) {\n    var importVariableName = path.get('specifiers')[0].get('local').node.name;\n    var identifierReferences = getIdentifierReferences(path, importVariableName);\n    var packageNames = identifierReferences.map(function (r) {\n      return getPackageName(content, deps, r);\n    });\n    return packageNames;\n  } else if (\n\n  // Pattern: plugins = require('gulp-load-plugins'), $ = plugins(), $.jshint()\n  (0, _requireCallExpression2.default)(path.node)[0] === 'gulp-load-plugins' && path.isCallExpression() && path.parentPath.isVariableDeclarator() && path.parentPath.get('id').isIdentifier()) {\n    var requireVariableName = path.parentPath.get('id').node.name;\n    var _identifierReferences = getIdentifierReferences(path, requireVariableName);\n    var _packageNames = _identifierReferences.map(function (r) {\n      return getPackageName(content, deps, r);\n    });\n    return _packageNames;\n  } else if (\n\n  // Pattern: $ = require('gulp-load-plugins')(), $.jshint()\n  (0, _requireCallExpression2.default)(path.node)[0] === 'gulp-load-plugins' && path.isCallExpression() && path.parentPath.isCallExpression() && path.parentPath.parentPath.isVariableDeclarator() && path.parentPath.parentPath.get('id').isIdentifier()) {\n    var _requireVariableName = path.parentPath.parentPath.get('id').node.name;\n    var _identifierReferences2 = getReferences(path, _requireVariableName);\n    var _packageNames2 = _identifierReferences2.map(function (r) {\n      return getPackageName(content, deps, r);\n    });\n    return _packageNames2;\n  } else if (\n\n  // Pattern: require('gulp-load-plugins')().thisPlugin()\n  (0, _requireCallExpression2.default)(path.node)[0] === 'gulp-load-plugins' && path.isCallExpression() && path.parentPath.isCallExpression() && path.parentPath.parentPath.isMemberExpression()) {\n    var packageName = getPackageName(content, deps, path.parentPath);\n    return [packageName];\n  }\n\n  return [];\n}\n\nfunction parseGulpPlugins(content, filePath, deps, rootDir) {\n  var resolvedPath = (0, _path.resolve)(filePath);\n  if (resolvedPath !== (0, _path.resolve)(rootDir, 'gulpfile.js') && resolvedPath !== (0, _path.resolve)(rootDir, 'gulpfile.babel.js')) {\n    return [];\n  }\n\n  var pluginLookup = getPluginLookup(deps);\n  var ast = (0, _es2.default)(content);\n  var results = [];\n  (0, _babelTraverse2.default)(ast, {\n    enter: function enter(path) {\n      results.push.apply(results, _toConsumableArray(check(content, pluginLookup, path)));\n    }\n  });\n\n  return (0, _lodash2.default)(results).filter().uniq().value();\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/mocha.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseMocha;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _requirePackageName = require('require-package-name');\n\nvar _requirePackageName2 = _interopRequireDefault(_requirePackageName);\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOpts(script) {\n  var argvs = script.split(' ').filter(function (argv) {\n    return argv;\n  });\n  var optsIndex = argvs.indexOf('--opts');\n  return optsIndex !== -1 ? argvs[optsIndex + 1] : null;\n}\n\nfunction getRequires(content, deps) {\n  return content.split('\\n').map(function (line) {\n    return line.trim();\n  }).filter(function (line) {\n    return line.indexOf('--require ') === 0;\n  }).map(function (line) {\n    return line.substring('--require '.length).trim();\n  }).map(_requirePackageName2.default).filter(function (name) {\n    return deps.indexOf(name) !== -1;\n  });\n}\n\nfunction parseMocha(content, filepath, deps, rootDir) {\n  var defaultOptPath = _path2.default.resolve(rootDir, 'test/mocha.opts');\n  if (filepath === defaultOptPath) {\n    return getRequires(content, deps);\n  }\n\n  // get mocha.opts from scripts\n  var requires = (0, _lodash2.default)((0, _utils.getScripts)(filepath, content)).filter(function (script) {\n    return script.indexOf('mocha') !== -1;\n  }).map(function (script) {\n    return getOpts(script);\n  }).filter(function (opts) {\n    return opts;\n  }).map(function (opts) {\n    return _path2.default.resolve(filepath, '..', opts);\n  }).map(function (optPath) {\n    return _fs2.default.readFileSync(optPath, 'utf-8');\n  }) // TODO async read file\n  .map(function (optContent) {\n    return getRequires(optContent, deps);\n  }).flatten().value();\n\n  return requires;\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/dist/special/webpack.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseWebpack;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar webpackConfigRegex = /webpack(\\..+)?\\.config.js/;\nvar loaderTemplates = ['*-webpack-loader', '*-web-loader', '*-loader', '*'];\n\nfunction extractLoaders(item) {\n  if (item.loader) {\n    return item.loader.split('!');\n  } else if (item.loaders) {\n    return item.loaders;\n  }\n\n  return [];\n}\n\nfunction stripQueryParameter(loader) {\n  var index = loader.indexOf('?');\n  return index === -1 ? loader : loader.substring(0, index);\n}\n\nfunction normalizeLoader(deps, loader) {\n  var name = (0, _lodash2.default)(loaderTemplates).map(function (template) {\n    return template.replace('*', loader);\n  }).intersection(deps).first();\n\n  return name;\n}\n\nfunction getLoaders(deps, loaders) {\n  return (0, _lodash2.default)(loaders || []).map(extractLoaders).flatten().map(function (loader) {\n    return stripQueryParameter(loader);\n  }).map(function (loader) {\n    return normalizeLoader(deps, loader);\n  }).filter(function (loader) {\n    return loader;\n  }).uniq().value();\n}\n\nfunction parseWebpack(content, filepath, deps) {\n  var filename = _path2.default.basename(filepath);\n  if (webpackConfigRegex.test(filename)) {\n    var module = require(filepath).module || {}; // eslint-disable-line global-require\n    var loaders = getLoaders(deps, module.loaders);\n    var preLoaders = getLoaders(deps, module.preLoaders);\n    var postLoaders = getLoaders(deps, module.postLoaders);\n    return loaders.concat(preLoaders).concat(postLoaders);\n  }\n\n  return [];\n}\nmodule.exports = exports['default'];","/home/travis/build/npmtest/node-npmtest-depcheck/node_modules/depcheck/false-alert.js":"/**\n * I am using this file to avoid false alert in this project.\n * It is not good, however it works.\n * The typescript and node-sass are parsers as peer dependencies.\n * However, because of NPM's bug, it is blocking users.\n * They are only mentioned in README and declared in devDependencies for testing.\n * Reference: https://github.com/depcheck/depcheck/issues/130\n */\nimport 'node-sass';\nimport 'typescript';\n\n/**\n * Recongnize the required module by nyc. See depcheck/depcheck#183\n */\nimport 'babel-polyfill';\nimport 'babel-register';\n"}